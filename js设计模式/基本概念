五大基本原则
   1、单一职责原则
   2、开放封闭原则
      1、开放拓展新方法，封闭修改老方法
   3、李氏置换原则
   4、接口独立原则
   5、依赖倒置原则



UML  设计模型 
1、创建型
   1、工厂模式   做小汽车  
   2、单列模式   唯一实例；登录功能；js可以用闭包实现
   3、原型模式   


2、结构性
   1、适配器模式   写一个新方法名，实际内容还是原来方法； 将就接口和使用者分离；符合开放封闭原则
   2、装饰器模式   在原有的方法里面加操作；常用库core-decorators
      常用写法        @add   
                     class A {}
                     function add( target ){ target.isDec = true}
   上面写法等同于     add(A)
   

   3、代理模式      常用代理模式：Proxy函数   
                     和适配器区别；代理模式的接口名是不变的
                     和装饰器区别；代理模式的接口是原有的，不过加了限制
   4、外观模式


3、行为型
   1、策略模式
   2、迭代器模式
   3、观察者模式