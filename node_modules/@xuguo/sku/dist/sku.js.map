{"version":3,"file":"sku.js","sources":["../../toolbox/dist/toolbox.esm.js","../src/spec/spuOps.ts","../src/control/skuPending.ts","../src/helper/enum.ts","../src/control/skuCode.ts","../src/control/judger.ts","../src/spec/spec.ts","../src/spec/specLine.ts","../src/spec/specGroup.ts","../src/index.ts"],"sourcesContent":["function t(t){return function(r){return typeof r===t.toLowerCase()}}var r=Object.prototype.toString;function n(t){return function(n){return r.call(n).toLowerCase()===\"[object \"+t+\"]\"}}var e=t(\"number\"),o=t(\"bigint\"),u=t(\"boolean\"),i=t(\"string\"),f=t(\"function\"),a=t(\"undefined\"),c=function(t){return null==t},p=n(\"array\"),l=n(\"date\"),y=n(\"regexp\"),g=function(t){return null===t},h=function(t){return\"object\"==typeof t&&!g(t)},s=n(\"object\"),m=function(t){if(!s(t))return!1;if(null===Object.getPrototypeOf(t))return!0;for(var r=t;null!==Object.getPrototypeOf(r);)r=Object.getPrototypeOf(r);return Object.getPrototypeOf(t)===r},b=function(){function t(t){this._m=t}return t.prototype.getRawMatrix=function(){return this._m},t.prototype.getRawMatrixColNum=function(){try{return this._m[0].length}catch(t){throw new Error(\"矩阵列不能为空\")}},t.prototype.getRawMatrixRowNum=function(){return this._m.length},t.prototype.transpose=function(){for(var t=this.getRawMatrixColNum(),r=this.getRawMatrixRowNum(),n=Array.from({length:t}).map((function(){return Array.from({length:r})})),e=0;e<t;e++)for(var o=0;o<r;o++)n[e][o]=this._m[o][e];return n},t}();function v(t,r,n){if(void 0===n&&(n=function(t){return t.join(\"-\")}),r<0)return[];if(1===r)return t.map((function(t){return n([t])}));var e=[];return function t(o,u,i){if(i.length!==r)for(var f=u;f<o.length;f++)i.push(o[f]),t(o,f+1,i),i.pop();else e.push(n(i))}(t,0,[]),e}function O(t,r){if(!h(t)||!h(r))return t===r;if(t===r)return!0;var n=Object.keys(t),e=Object.keys(r);if(n.length!==e.length)return!1;for(var o in t){if(!O(t[o],r[o]))return!1}return!0}function j(t){var r=Array.prototype.concat.apply([],t);return r.some((function(t){return t instanceof Array}))?j(r):r}function w(t,r){var n={};for(var e in r)n[e]=r[e];for(var e in t)Object.prototype.hasOwnProperty.call(n,e)||(n[e]=t[e]);return n}export{b as Matrix,v as combination,w as extend,j as falt,p as isArray,o as isBigint,u as isBoolean,l as isDate,O as isEqual,f as isFunction,g as isNull,e as isNumber,s as isObject,h as isObjectLike,m as isPureObject,y as isRegExp,i as isString,a as isUndefined,c as isUndefinedOrNull};\n","import { extend } from '@xuguo/toolbox'\n\nexport interface SpuOps {\n  skuCodeJoiner: string\n  specCodeJoiner: string\n  getSkuList(spu: any): any[]\n  getSkuSpecList(sku: any): any[]\n  getSkuId(sku: any): number | string\n  getSpecId(spec: any): number | string\n  getspecValueId(spec: any): number | string\n  getSpecTitle(spec: any): string\n  getspecValue(spec: any): string\n  [key: string]: unknown\n}\n\nexport let currentSpuOps: SpuOps = {\n  skuCodeJoiner: '$',\n  specCodeJoiner: '#',\n  getSkuList(spu) {\n    return spu\n  },\n  getSkuSpecList(sku) {\n    return sku.spuSpecValues\n  },\n  getSkuId(sku) {\n    return sku.skuId\n  },\n  getSpecId(spec) {\n    return spec.specId\n  },\n  getSpecTitle(spec) {\n    return spec.specName\n  },\n  getspecValueId(spec) {\n    return spec.specValueId\n  },\n  getspecValue(spec) {\n    return spec.specValueRemark\n  },\n}\n\nexport function setSpuOps(ops: Partial<SpuOps>): void {\n  currentSpuOps = extend(currentSpuOps, ops)\n}\n","import { isUndefinedOrNull } from '@xuguo/toolbox'\nimport { SpecInstanceType } from '../spec/spec'\nimport { currentSpuOps } from '../spec/spuOps'\n\nexport class SkuPending {\n  selectedSpec: (SpecInstanceType | null)[]\n  hooks: any[] = []\n\n  constructor(totalSpecNum: number) {\n    this.selectedSpec = Array.from({ length: totalSpecNum })\n  }\n\n  selectSpec(row: number, spec: SpecInstanceType): void {\n    this.selectedSpec[row] = spec\n    if (this.checkIsGenASku()) {\n      this.hooks.forEach((cb) => {\n        cb(this.getSpecsJoin())\n      })\n    }\n  }\n\n  cancelSpec(row: number): void {\n    this.selectedSpec[row] = null\n  }\n\n  sepcIsSelected(row: number, spec: SpecInstanceType): boolean {\n    return this.selectedSpec[row] &&\n      this.selectedSpec[row]?.specJoinQue === spec.specJoinQue\n      ? true\n      : false\n  }\n\n  getSpecsJoinWith(row: number, spec: SpecInstanceType): string {\n    return this.selectedSpec.reduce((memo, curSpec, curRow) => {\n      if (curRow === row) {\n        return memo\n          ? `${memo}${currentSpuOps.specCodeJoiner}${spec.specJoinQue}`\n          : spec.specJoinQue\n      } else {\n        return memo\n          ? curSpec\n            ? `${memo}${currentSpuOps.specCodeJoiner}${curSpec.specJoinQue}`\n            : memo\n          : curSpec\n          ? curSpec.specJoinQue\n          : ''\n      }\n    }, '')\n  }\n\n  combineHook(cb: (...args: any[]) => any): void {\n    this.hooks.push(cb)\n  }\n\n  checkIsGenASku(): boolean {\n    return !this.selectedSpec.some(isUndefinedOrNull)\n  }\n\n  getSpecsJoin(): string {\n    return this.selectedSpec\n      .map((spec) => spec?.specJoinQue)\n      .join(currentSpuOps.specCodeJoiner)\n  }\n}\n\nexport type SkuPendingInstanceType = InstanceType<typeof SkuPending>\n","export enum SpecStatus {\n  PENDING = 'pending',\n  DISABLED = 'disabled',\n  SELECTED = 'selected',\n}\n","import { currentSpuOps } from './../spec/spuOps'\nimport { combination } from '@xuguo/toolbox'\n\nexport class SkuCode {\n  code: string\n  skuId: number | string = ''\n  toltalSpecCombine: string[] = []\n  constructor(skuSpecsJoiner: string) {\n    this.code = skuSpecsJoiner\n    this._combineCode()\n  }\n\n  private _combineCode() {\n    const splitRes = this.code.split(currentSpuOps.skuCodeJoiner)\n    this.skuId = splitRes[0]\n    const specIds = splitRes[1].split(currentSpuOps.specCodeJoiner)\n    const len = specIds.length\n    for (let i = 1; i <= len; i++) {\n      const specCombine = combination(specIds, i, (specs) =>\n        specs.join(currentSpuOps.specCodeJoiner)\n      )\n      this.toltalSpecCombine = [...this.toltalSpecCombine, ...specCombine]\n    }\n  }\n}\n","import { currentSpuOps } from './../spec/spuOps'\nimport { SkuPending, SkuPendingInstanceType } from './skuPending'\nimport { SpecGroupInstanceType } from './../spec/specGroup'\nimport { SkuCode } from './skuCode'\nimport { SpecInstanceType } from '../spec/spec'\nimport { SpecStatus } from '../helper/enum'\n\nexport class Judger {\n  specGroup: SpecGroupInstanceType\n  pathDict: string[] = []\n  skuPending!: SkuPendingInstanceType\n\n  constructor(sg: SpecGroupInstanceType) {\n    this.specGroup = sg\n    this._initPathDict()\n    this._initSkuPending()\n  }\n\n  private _initPathDict() {\n    this.specGroup.eachSkuIdJoinSpecsId((skuSpecsJoin) => {\n      const sc = new SkuCode(skuSpecsJoin)\n      this.pathDict = [...this.pathDict, ...sc.toltalSpecCombine]\n    })\n  }\n\n  private _initSkuPending() {\n    const totalSpecNum = this.specGroup.specLines.length\n    this.skuPending = new SkuPending(totalSpecNum)\n  }\n\n  specTap(spec: SpecInstanceType): void {\n    if (spec.status === SpecStatus.DISABLED) return\n    this._changeSpecStatus(spec)\n    this._checkOtherSpecStatus()\n  }\n\n  onSkuCombined(cb: (...args: any[]) => any): void {\n    this.skuPending.combineHook((specsJoin: string) => {\n      let skuId, specsJoinStr\n      this.specGroup.skuIdJoinSpecsId.forEach((sjs) => {\n        if (sjs.includes(specsJoin)) {\n          ;[skuId, specsJoinStr] = sjs.split(currentSpuOps.skuCodeJoiner)\n        }\n      })\n      cb(skuId, specsJoinStr)\n    })\n  }\n\n  private _changeSpecStatus(spec: SpecInstanceType) {\n    if (spec.status === SpecStatus.PENDING) {\n      this.specGroup.setSpecStatusByPosition(\n        spec.row,\n        spec.col,\n        SpecStatus.SELECTED\n      )\n      this.skuPending.selectSpec(\n        spec.row,\n        this.specGroup.getSpec(spec.row, spec.col)\n      )\n    } else if (spec.status === SpecStatus.SELECTED) {\n      this.specGroup.setSpecStatusByPosition(\n        spec.row,\n        spec.col,\n        SpecStatus.PENDING\n      )\n      this.skuPending.cancelSpec(spec.row)\n    }\n  }\n\n  private _checkOtherSpecStatus() {\n    this.specGroup.eachSpec((spec, row, col) => {\n      if (!this.skuPending.sepcIsSelected(row, spec)) {\n        const curSpecJoinQue = this.skuPending.getSpecsJoinWith(row, spec)\n        if (!this._isInPathDict(curSpecJoinQue)) {\n          this._disableSpec(row, col)\n        } else {\n          // 在组合字典中的情况，某些元素之前被disabled需要还原成pending\n          this.specGroup.setSpecStatusByPosition(\n            spec.row,\n            spec.col,\n            SpecStatus.PENDING\n          )\n        }\n      }\n    })\n  }\n\n  private _isInPathDict(specJoinQue: string): boolean {\n    return this.pathDict.includes(specJoinQue)\n  }\n\n  private _disableSpec(row: number, col: number) {\n    this.specGroup.setSpecStatusByPosition(row, col, SpecStatus.DISABLED)\n  }\n}\n\nexport type JudgerInstanceType = InstanceType<typeof Judger>\n","import { SpecStatus } from '../helper/enum'\nimport { currentSpuOps } from './spuOps'\n\nexport class Spec<T> {\n  specValue: string\n  specId: string | number\n  specValueId: number | string\n  status: SpecStatus = SpecStatus.PENDING\n  row: number\n  col: number\n\n  get specJoinQue(): string {\n    return this.specValueId\n      ? `${this.specId}-${this.specValueId}`\n      : `${this.specId}`\n  }\n\n  setStatus(status: SpecStatus): void {\n    this.status = status\n  }\n\n  constructor(spec: T, _row: number, _col: number) {\n    this.row = _row\n    this.col = _col\n    this.specValue = currentSpuOps.getspecValue(spec)\n    this.specId = currentSpuOps.getSpecId(spec)\n    this.specValueId = currentSpuOps.getspecValueId(spec)\n  }\n}\n\nexport type SpecInstanceType = InstanceType<typeof Spec>\n","import { currentSpuOps } from './spuOps'\nimport { SpecInstanceType, Spec } from './spec'\n\nexport class SpecLine<T> {\n  specLineTitle = ''\n  specs: SpecInstanceType[] = []\n  row: number\n\n  constructor(_specs: T[], _row: number) {\n    this.row = _row\n    this.specLineTitle = currentSpuOps.getSpecTitle(_specs[0])\n    this._init(_specs)\n  }\n\n  private _init(specs: T[]) {\n    specs.map((s, col) => {\n      if (!this._specIsRepeact(s)) {\n        const spec = new Spec(s, this.row, col)\n        this.specs.push(spec)\n      }\n    })\n  }\n\n  private _specIsRepeact(spec: T): boolean {\n    return this.specs.findIndex(\n      (curSpec) =>\n        `${curSpec.specId}-${curSpec.specValueId}` ===\n        `${currentSpuOps.getSpecId(spec)}-${currentSpuOps.getspecValueId(spec)}`\n    ) > -1\n      ? true\n      : false\n  }\n}\n\nexport type SpecLineInstanceType = InstanceType<typeof SpecLine>\n","import { SpecLine, SpecLineInstanceType } from './specLine'\nimport { Matrix } from '@xuguo/toolbox'\nimport { currentSpuOps } from './spuOps'\nimport { SpecInstanceType } from './spec'\nimport { SpecStatus } from '../helper/enum'\n\nexport type SpuList<T> = {\n  [key: string]: T[] | any\n}\n\nexport class SpecGroup<T, U> {\n  private _skuList: T[]\n  private _skuSpecsList: U[][] = []\n  private _skuIdJoinSpecsId: string[] = []\n  specLines: SpecLineInstanceType[] = []\n\n  get skuSpecsList(): U[][] {\n    return this._skuSpecsList\n  }\n\n  get skuIdJoinSpecsId(): string[] {\n    return this._skuIdJoinSpecsId\n  }\n\n  constructor(spu_list: SpuList<T>) {\n    this._skuList = currentSpuOps.getSkuList(spu_list)\n    this._setup()\n  }\n\n  private _setup() {\n    this._createSkuSpecsList()\n    const skuSpecList = this._transposeSkuSpecsList()\n    this._createSpecLines(skuSpecList)\n  }\n\n  private _createSkuSpecsList() {\n    this._skuSpecsList = this._skuList.map((sku) => {\n      const specsList: U[] = currentSpuOps.getSkuSpecList(sku)\n      this._createSkuIdJoinSpecsId(sku, specsList)\n      return specsList\n    })\n  }\n\n  private _createSkuIdJoinSpecsId(sku: T, specsList: U[]): void {\n    const skuId = currentSpuOps.getSkuId(sku)\n    let skuIdJoinSpecId = `${skuId}${currentSpuOps.skuCodeJoiner}`\n    const specsIds = specsList.map((spec) => {\n      const specId = currentSpuOps.getSpecId(spec)\n      const specValueId = currentSpuOps.getspecValueId(spec)\n      return specValueId ? `${specId}-${specValueId}` : specId\n    })\n    skuIdJoinSpecId += specsIds.join(currentSpuOps.specCodeJoiner)\n    this._skuIdJoinSpecsId.push(skuIdJoinSpecId)\n  }\n\n  private _transposeSkuSpecsList() {\n    const m = new Matrix(this._skuSpecsList)\n    return m.transpose()\n  }\n\n  private _createSpecLines(skuSpecList: U[][]) {\n    for (let row = 0; row < skuSpecList.length; row++) {\n      const specLine = new SpecLine(skuSpecList[row], row)\n      this.specLines.push(specLine)\n    }\n  }\n\n  eachSpec(\n    cb: (spec: SpecInstanceType, row: number, col: number) => any\n  ): void {\n    this.specLines.forEach((specLine, row) => {\n      specLine.specs.forEach((spec, col) => {\n        cb(spec, row, col)\n      })\n    })\n  }\n\n  getSpec(row: number, col: number): SpecInstanceType {\n    return this.specLines[row].specs[col]\n  }\n\n  setSpecStatusByPosition(row: number, col: number, status: SpecStatus): void {\n    this.specLines[row].specs[col].setStatus(status)\n  }\n\n  eachSkuIdJoinSpecsId(cb: (skuSpecsJoin: string) => any): void {\n    this._skuIdJoinSpecsId.forEach((que) => {\n      cb(que)\n    })\n  }\n}\n\nexport type SpecGroupInstanceType = InstanceType<typeof SpecGroup>\n","import { Judger, JudgerInstanceType } from './control/judger'\nimport { SpecGroup, SpuList } from './spec/specGroup'\nimport { SpuOps, setSpuOps } from './spec/spuOps'\nimport { SpecInstanceType } from '../src/spec/spec'\nimport { SpecLineInstanceType } from '../src/spec/specLine'\n\nexport function createSkuSelector<T>(\n  spuList: SpuList<T>,\n  _spuOps?: Partial<SpuOps>\n): JudgerInstanceType {\n  _spuOps && setSpuOps(_spuOps)\n  const sg = new SpecGroup(spuList)\n  const judger = new Judger(sg)\n  return judger\n}\n\nexport { SpuOps, SpecInstanceType, SpecLineInstanceType }\n"],"names":["c","t","b","this","_m","prototype","getRawMatrix","getRawMatrixColNum","length","Error","getRawMatrixRowNum","transpose","r","n","Array","from","map","e","o","v","join","u","i","f","push","pop","currentSpuOps","skuCodeJoiner","specCodeJoiner","getSkuList","spu","getSkuSpecList","sku","spuSpecValues","getSkuId","skuId","getSpecId","spec","specId","getSpecTitle","specName","getspecValueId","specValueId","getspecValue","specValueRemark","setSpuOps","ops","Object","hasOwnProperty","call","extend","SpecStatus","totalSpecNum","selectedSpec","SkuPending","row","checkIsGenASku","hooks","forEach","cb","_this","getSpecsJoin","specJoinQue","reduce","memo","curSpec","curRow","some","isUndefinedOrNull","skuSpecsJoiner","code","_combineCode","SkuCode","splitRes","split","specIds","len","specCombine","combination","specs","toltalSpecCombine","sg","specGroup","_initPathDict","_initSkuPending","Judger","eachSkuIdJoinSpecsId","skuSpecsJoin","sc","pathDict","specLines","skuPending","status","DISABLED","_changeSpecStatus","_checkOtherSpecStatus","combineHook","specsJoin","specsJoinStr","skuIdJoinSpecsId","sjs","includes","_a","PENDING","setSpecStatusByPosition","col","SELECTED","selectSpec","getSpec","cancelSpec","eachSpec","sepcIsSelected","curSpecJoinQue","getSpecsJoinWith","_isInPathDict","_disableSpec","_row","_col","specValue","Spec","_specs","specLineTitle","_init","SpecLine","s","_specIsRepeact","findIndex","spu_list","_skuList","_setup","SpecGroup","_skuSpecsList","_skuIdJoinSpecsId","_createSkuSpecsList","skuSpecList","_transposeSkuSpecsList","_createSpecLines","specsList","_createSkuIdJoinSpecsId","skuIdJoinSpecId","Matrix","specLine","setStatus","que","spuList","_spuOps"],"mappings":"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"}